(window.webpackJsonp=window.webpackJsonp||[]).push([[9],{AaiJ:function(e,n,t){"use strict";t.r(n),t.d(n,"_frontmatter",(function(){return l})),t.d(n,"default",(function(){return f}));var o=t("Fcif"),c=t("+I+c"),u=t("mXGw"),a=t("/FXl"),r=t("TjRS"),i=t("ZFoC"),s=t("DTLV"),l=(t("aD51"),{});void 0!==l&&l&&l===Object(l)&&Object.isExtensible(l)&&!l.hasOwnProperty("__filemeta")&&Object.defineProperty(l,"__filemeta",{configurable:!0,value:{name:"_frontmatter",filename:"src/hooks/useSignedCounter/useSignedCounter.mdx"}});var b={_frontmatter:l},d=r.a;function f(e){var n,t=e.components,f=Object(c.a)(e,["components"]);return Object(a.b)(d,Object(o.a)({},b,f,{components:t,mdxType:"MDXLayout"}),Object(a.b)("h1",{id:"usesignedcounter"},"useSignedCounter"),Object(a.b)("h2",{id:"basic-usage"},"Basic usage"),Object(a.b)("p",null,"  顾名思义，被标记的计数器。该hook可用在以下的场景："),Object(a.b)("p",null,"  某个请求会被触发多次，但是需要显示最后一次请求的结果。\n由于异步请求的返回时间不能保证顺序，所以需要每次请求做个标记，只有最近一次的请求才可以作为最终正确结果。"),Object(a.b)("pre",null,Object(a.b)("code",Object(o.a)({parentName:"pre"},{className:"language-js"}),"import { useSignedCounter } from 'vc-ui'\n      \n")),Object(a.b)(i.c,{__position:0,__code:"() => {\n  const [countRef, updateCount] = useSignedCounter()\n  const fetchData = React.useCallback(() => {\n    updateCount()\n    const id = countRef.current\n    console.log('异步请求')\n    setTimeout(() => {\n      console.log(\n        'id ?== countRef.current',\n        id,\n        countRef.current,\n        id === countRef.current,\n      )\n    }, 300)\n  }, [countRef, updateCount])\n  const handleClick = React.useCallback(() => {\n    fetchData()\n  }, [fetchData])\n  return (\n    <div>\n      <button onClick={handleClick}>click</button>\n    </div>\n  )\n}",__scope:(n={props:f,DefaultLayout:r.a,Playground:i.c,Props:i.d,useState:u.useState,useRef:u.useRef,useSignedCounter:s.a},n.DefaultLayout=r.a,n._frontmatter=l,n),mdxType:"Playground"},(function(){var e=Object(s.a)(),n=e[0],t=e[1],o=u.useCallback((function(){t();var e=n.current;console.log("异步请求"),setTimeout((function(){console.log("id ?== countRef.current",e,n.current,e===n.current)}),300)}),[n,t]),c=u.useCallback((function(){o()}),[o]);return Object(a.b)("div",null,Object(a.b)("button",{onClick:c},"click"))})))}void 0!==f&&f&&f===Object(f)&&Object.isExtensible(f)&&!f.hasOwnProperty("__filemeta")&&Object.defineProperty(f,"__filemeta",{configurable:!0,value:{name:"MDXContent",filename:"src/hooks/useSignedCounter/useSignedCounter.mdx"}}),f.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-hooks-use-signed-counter-use-signed-counter-mdx-86b965f85d0741a6961b.js.map