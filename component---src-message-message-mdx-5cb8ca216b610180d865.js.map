{"version":3,"sources":["webpack:///../src/message/Message.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","of","message","__position","__code","__scope","Playground","Props","createMuiTheme","ThemeProvider","Button","setTheme","theme","palette","primary","main","contrastText","light","error","text","disabled","action","hover","id","variant","onClick","open","noticeIconName","content","style","left","bottom","transform","expandActions","iconName","console","log","duration","isMDXComponent"],"mappings":"iUAaaA,G,UAAe,S,yMAC5B,IAAMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,MAFDC,EAEC,EAFDA,WACGC,EACF,8BACD,OAAO,YAACJ,EAAD,eAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAI5E,iBAAQ,CACN,GAAM,WADR,WAGA,iBAAQ,CACN,GAAM,SADR,SAGA,YAAC,IAAD,CAAOC,GAAIC,IAASF,QAAQ,UAC5B,iBAAQ,CACN,GAAM,eADR,eAGA,YAAC,IAAD,CAAYG,WAAY,EAAGC,OAAQ,+vCAAoyCC,SAAO,GAC50CN,QACAH,kBACAU,eACAC,UACAC,mBACAC,kBACAC,WACAR,YACAS,cAT40C,gBAU50Cf,IAV40C,EAW50CH,eAX40C,GAY30CO,QAAQ,eACZ,WACK,IAAMY,EAAQJ,YAAe,CAC3BK,QAAS,CACPC,QAAS,CACPC,KAAM,wBACNC,aAAc,OACdC,MAAO,WAETC,MAAO,CACLH,KAAM,wBAERI,KAAM,CACJC,SAAU,uBAEZC,OAAQ,CACNC,MAAO,0BAIbX,YAASC,GA+BT,OAAO,YAAC,IAAD,CAAeA,MAAOA,EAAOZ,QAAQ,iBAC1C,mBAAKuB,GAAG,OACN,YAAC,IAAD,CAAQC,QAAQ,YAAYC,QA/BZ,WAClBvB,IAAQwB,KAAK,CACXC,eAAgB,gBAChBC,QAAS,QACTC,MAAO,CACLC,KAAM,MACNC,OAAQ,OACRC,UAAW,oBAEbC,cAAe,CAAC,CACdd,KAAM,OACNe,SAAU,gBACVT,QAAS,kBAAMU,QAAQC,IAAI,iBAE7BC,SAAU,KAiBwCrC,QAAQ,UAA1D,aACA,uBAAM,uBACN,YAAC,IAAD,CAAQwB,QAAQ,YAAYC,QAfhB,WACdvB,IAAQwB,KAAK,CACXE,QAAS,UACTC,MAAO,CACLC,KAAM,MACNC,OAAQ,OACRC,UAAW,uBASiChC,QAAQ,UAAtD,yB,uMASZH,EAAWyC,gBAAiB","file":"component---src-message-message-mdx-5cb8ca216b610180d865.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/travis/build/HarryChen0506/vc-ui/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport { Playground, Props } from 'docz';\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\nimport Button from '../Button';\nimport message from './';\nimport { setTheme } from '../theme';\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h1 {...{\n      \"id\": \"message\"\n    }}>{`message`}</h1>\n    <h2 {...{\n      \"id\": \"props\"\n    }}>{`Props`}</h2>\n    <Props of={message} mdxType=\"Props\" />\n    <h2 {...{\n      \"id\": \"basic-usage\"\n    }}>{`Basic usage`}</h2>\n    <Playground __position={1} __code={'() => {\\n  const theme = createMuiTheme({\\n    palette: {\\n      primary: {\\n        main: \\'rgba(35, 178, 190, 1)\\',\\n        contrastText: \\'#fff\\',\\n        light: \\'#18FFFF\\',\\n      },\\n      error: { main: \\'rgba(255, 152, 0, 1)\\' },\\n      text: { disabled: \\'rgba(0, 0, 0, 0.26)\\' },\\n      action: { hover: \\'rgba(0, 0, 0, 0.04)\\' },\\n    },\\n  })\\n  setTheme(theme)\\n  const showMessage = () => {\\n    message.open({\\n      noticeIconName: \\'notifications\\',\\n      content: \\'转诊成功！\\',\\n      style: { left: \\'50%\\', bottom: \\'20px\\', transform: \\'translateX(-50%)\\' },\\n      expandActions: [\\n        {\\n          text: \\'查看患者\\',\\n          iconName: \\'notifications\\',\\n          onClick: () => console.log(\\'successful\\'),\\n        },\\n      ],\\n      duration: 3,\\n    })\\n  }\\n  const showMsg = () => {\\n    message.open({\\n      content: \\'密码设置成功！\\',\\n      style: { left: \\'50%\\', bottom: \\'20px\\', transform: \\'translateX(-50%)\\' },\\n    })\\n  }\\n  return (\\n    <ThemeProvider theme={theme}>\\n      <div id=\\\"app\\\">\\n        <Button variant=\\\"contained\\\" onClick={showMessage}>\\n          显示Message\\n        </Button>\\n        <br />\\n        <br />\\n        <Button variant=\\\"contained\\\" onClick={showMsg}>\\n          显示Message2\\n        </Button>\\n      </div>\\n    </ThemeProvider>\\n  )\\n}'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      createMuiTheme,\n      ThemeProvider,\n      Button,\n      message,\n      setTheme,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  {() => {\n        const theme = createMuiTheme({\n          palette: {\n            primary: {\n              main: 'rgba(35, 178, 190, 1)',\n              contrastText: '#fff',\n              light: '#18FFFF'\n            },\n            error: {\n              main: 'rgba(255, 152, 0, 1)'\n            },\n            text: {\n              disabled: 'rgba(0, 0, 0, 0.26)'\n            },\n            action: {\n              hover: 'rgba(0, 0, 0, 0.04)'\n            }\n          }\n        });\n        setTheme(theme);\n\n        const showMessage = () => {\n          message.open({\n            noticeIconName: 'notifications',\n            content: '转诊成功！',\n            style: {\n              left: '50%',\n              bottom: '20px',\n              transform: 'translateX(-50%)'\n            },\n            expandActions: [{\n              text: '查看患者',\n              iconName: 'notifications',\n              onClick: () => console.log('successful')\n            }],\n            duration: 3\n          });\n        };\n\n        const showMsg = () => {\n          message.open({\n            content: '密码设置成功！',\n            style: {\n              left: '50%',\n              bottom: '20px',\n              transform: 'translateX(-50%)'\n            }\n          });\n        };\n\n        return <ThemeProvider theme={theme} mdxType=\"ThemeProvider\">\n          <div id='app'>\n            <Button variant=\"contained\" onClick={showMessage} mdxType=\"Button\">显示Message</Button>\n            <br /><br />\n            <Button variant=\"contained\" onClick={showMsg} mdxType=\"Button\">显示Message2</Button>\n          </div>\n        </ThemeProvider>;\n      }}\n    </Playground>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}