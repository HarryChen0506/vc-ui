{"version":3,"sources":["webpack:///../src/hooks/useClickAway/useClickAway.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","of","UseClickAwayPropTypes","__position","__code","__scope","Playground","Props","useState","useRef","useClickAway","counter","setCounter","ref","s","type","document","querySelector","id","ref1","ref2","isMDXComponent"],"mappings":"2RAYaA,G,UAAe,S,yNAC5B,IAAMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,UAFDC,EAEC,EAFDA,WACGC,EACF,8BACD,OAAO,YAACJ,EAAD,eAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAI5E,iBAAQ,CACN,GAAM,gBADR,gBAGA,iBAAQ,CACN,GAAM,SADR,SAGA,YAAC,IAAD,CAAOC,GAAIC,IAAuBF,QAAQ,UAC1C,iBAAQ,CACN,GAAM,eADR,eAGA,wCACA,YAAC,IAAD,CAAYG,WAAY,EAAGC,OAAQ,8SAAiTC,SAAO,GACzVN,QACAH,kBACAU,eACAC,UACAC,oBACAC,gBACAC,iBACAR,2BARyV,gBASzVN,IATyV,EAUzVH,eAVyV,GAWxVO,QAAQ,eACZ,WAAM,MAC6BQ,mBAAS,GAAhCG,EADN,KACeC,EADf,KAEKC,EAAMJ,mBAIZ,OAHAC,aAAa,WACXE,GAAW,SAAAE,GAAC,OAAIA,EAAI,OACnBD,GACI,uBACL,oBAAMA,IAAKA,GACT,sBAAQE,KAAK,UAAb,SAEF,iCAAaJ,OAInB,iBAAQ,CACN,GAAM,cADR,cAGA,gEACA,YAAC,IAAD,CAAYR,WAAY,EAAGC,OAAQ,iUAAsUC,SAAO,GAC9WN,QACAH,kBACAU,eACAC,UACAC,oBACAC,gBACAC,iBACAR,2BAR8W,gBAS9WN,IAT8W,EAU9WH,eAV8W,GAW7WO,QAAQ,eACZ,WAAM,MAC6BQ,mBAAS,GAAhCG,EADN,KACeC,EADf,KAKD,OAHAF,aAAa,WACXE,GAAW,SAAAE,GAAC,OAAIA,EAAI,QACnB,kBAAME,SAASC,cAAc,YACzB,uBACL,sBAAQF,KAAK,SAASG,GAAG,QAAzB,QACA,iCAAaP,OAInB,iBAAQ,CACN,GAAM,aADR,aAGA,qCACA,YAAC,IAAD,CAAYR,WAAY,EAAGC,OAAQ,2ZAAgaC,SAAO,GACxcN,QACAH,kBACAU,eACAC,UACAC,oBACAC,gBACAC,iBACAR,2BARwc,gBASxcN,IATwc,EAUxcH,eAVwc,GAWvcO,QAAQ,eACZ,WAAM,MAC6BQ,mBAAS,GAAhCG,EADN,KACeC,EADf,KAEKO,EAAOV,mBACPW,EAAOX,mBAIb,OAHAC,aAAa,WACXE,GAAW,SAAAE,GAAC,OAAIA,EAAI,OACnB,CAACK,EAAMC,IACH,uBACL,sBAAQL,KAAK,SAASF,IAAKM,GAA3B,QACA,uBACA,sBAAQJ,KAAK,SAASF,IAAKO,GAA3B,QACA,iCAAaT,a,uNAQvBd,EAAWwB,gBAAiB","file":"component---src-hooks-use-click-away-use-click-away-mdx-17dea29f889a10287551.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/travis/build/HarryChen0506/vc-ui/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport { Playground, Props } from 'docz';\nimport { useState, useRef } from 'react';\nimport useClickAway from './index';\nimport UseClickAwayPropTypes from './UseClickAwayPropTypes';\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h1 {...{\n      \"id\": \"useclickaway\"\n    }}>{`useClickAway`}</h1>\n    <h2 {...{\n      \"id\": \"props\"\n    }}>{`Props`}</h2>\n    <Props of={UseClickAwayPropTypes} mdxType=\"Props\" />\n    <h2 {...{\n      \"id\": \"basic-usage\"\n    }}>{`Basic usage`}</h2>\n    <p>{`  基础用法，ref传入dom`}</p>\n    <Playground __position={1} __code={'() => {\\n  const [counter, setCounter] = useState(0)\\n  const ref = useRef()\\n  useClickAway(() => {\\n    setCounter(s => s + 1)\\n  }, ref)\\n  return (\\n    <div>\\n      <span ref={ref}>\\n        <button type=\\\"button\\\">box1</button>\\n      </span>\\n      <p>counter: {counter}</p>\\n    </div>\\n  )\\n}'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      useState,\n      useRef,\n      useClickAway,\n      UseClickAwayPropTypes,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  {() => {\n        const [counter, setCounter] = useState(0);\n        const ref = useRef();\n        useClickAway(() => {\n          setCounter(s => s + 1);\n        }, ref);\n        return <div>\n          <span ref={ref}>\n            <button type=\"button\">box1</button>\n          </span>\n          <p>counter: {counter}</p>\n        </div>;\n      }}\n    </Playground>\n    <h2 {...{\n      \"id\": \"custom-dom\"\n    }}>{`Custom Dom`}</h2>\n    <p>{`  支持直接传入 DOM 对象或通过 function 返回一个对象的方式引入`}</p>\n    <Playground __position={2} __code={'() => {\\n  const [counter, setCounter] = useState(0)\\n  useClickAway(\\n    () => {\\n      setCounter(s => s + 1)\\n    },\\n    () => document.querySelector(\\'#box2\\'),\\n  )\\n  return (\\n    <div>\\n      <button type=\\\"button\\\" id=\\\"box2\\\">\\n        box2\\n      </button>\\n      <p>counter: {counter}</p>\\n    </div>\\n  )\\n}'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      useState,\n      useRef,\n      useClickAway,\n      UseClickAwayPropTypes,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  {() => {\n        const [counter, setCounter] = useState(0);\n        useClickAway(() => {\n          setCounter(s => s + 1);\n        }, () => document.querySelector('#box2'));\n        return <div>\n          <button type=\"button\" id='box2'>box2</button>\n          <p>counter: {counter}</p>\n        </div>;\n      }}\n    </Playground>\n    <h2 {...{\n      \"id\": \"multi-dom\"\n    }}>{`Multi Dom`}</h2>\n    <p>{`  支持传入多个目标对象`}</p>\n    <Playground __position={3} __code={'() => {\\n  const [counter, setCounter] = useState(0)\\n  const ref1 = useRef()\\n  const ref2 = useRef()\\n  useClickAway(() => {\\n    setCounter(s => s + 1)\\n  }, [ref1, ref2])\\n  return (\\n    <div>\\n      <button type=\\\"button\\\" ref={ref1}>\\n        box1\\n      </button>\\n      <br />\\n      <button type=\\\"button\\\" ref={ref2}>\\n        box2\\n      </button>\\n      <p>counter: {counter}</p>\\n    </div>\\n  )\\n}'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      useState,\n      useRef,\n      useClickAway,\n      UseClickAwayPropTypes,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  {() => {\n        const [counter, setCounter] = useState(0);\n        const ref1 = useRef();\n        const ref2 = useRef();\n        useClickAway(() => {\n          setCounter(s => s + 1);\n        }, [ref1, ref2]);\n        return <div>\n          <button type=\"button\" ref={ref1}>box1</button>\n          <br />\n          <button type=\"button\" ref={ref2}>box2</button>\n          <p>counter: {counter}</p>\n        </div>;\n      }}\n    </Playground>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}