{"version":3,"sources":["webpack:///../src/hooks/usePreviousProps/usePreviousProps.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","__position","__code","__scope","Playground","Props","useState","useRef","usePreviousProps","Child","text","setText","value","setValue","onInput","e","target","type","onClick","isMDXComponent"],"mappings":"2RAYaA,G,UAAe,S,iOAC5B,IAAMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,MAFDC,EAEC,EAFDA,WACGC,EACF,8BACD,OAAO,YAACJ,EAAD,eAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAI5E,iBAAQ,CACN,GAAM,oBADR,oBAGA,iBAAQ,CACN,GAAM,eADR,eAGA,iDACA,uBAAK,gCAAMC,WAAW,OAAU,CAC5B,UAAa,gBADZ,+YAmBL,YAAC,IAAD,CAAYC,WAAY,EAAGC,OAAQ,+TAAoUC,SAAO,GAC5WL,QACAH,kBACAS,eACAC,UACAC,oBACAC,gBACAC,qBACAC,WAR4W,gBAS5Wd,IAT4W,EAU5WH,eAV4W,GAW3WO,QAAQ,eACZ,WAAM,MACuBO,mBAAS,IAA1BI,EADN,KACYC,EADZ,OAEyBL,mBAAS,IAA5BM,EAFN,KAEaC,EAFb,KAGD,OAAO,uBACL,qBAAOC,QAAS,SAAAC,GAAC,OAAIJ,EAAQI,EAAEC,OAAOJ,UACtC,sBAAQK,KAAK,SAASC,QAAS,kBAAML,EAASH,KAA9C,WACA,YAAC,IAAD,CAAOE,MAAOA,EAAOb,QAAQ,oB,+NAQvCH,EAAWuB,gBAAiB","file":"component---src-hooks-use-previous-props-use-previous-props-mdx-661690e29bfe8fc8c063.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/travis/build/HarryChen0506/vc-ui/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport { Playground, Props } from 'docz';\nimport { useState, useRef } from 'react';\nimport usePreviousProps from './index';\nimport Child from './Child';\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h1 {...{\n      \"id\": \"usepreviousprops\"\n    }}>{`usePreviousProps`}</h1>\n    <h2 {...{\n      \"id\": \"basic-usage\"\n    }}>{`Basic usage`}</h2>\n    <p>{`  保存的上个effect生命周期里的props`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`import { usePreviousProps } from 'vc-ui'\n\nconst Child = ({ value }) => {\n  const previousProps = usePreviousProps(props)\n  if (previousProps.value !== props.value) {\n    console.log('changed')\n  } else {\n    console.log('not changed')\n  }\n  return (\n    <div>\n      <p>previous: {JSON.stringify(previousProps)}</p>\n      <p>current: {JSON.stringify(props)}</p>\n    </div>\n  )\n}\n`}</code></pre>\n    <Playground __position={0} __code={'() => {\\n  const [text, setText] = useState(\\'\\')\\n  const [value, setValue] = useState(\\'\\')\\n  return (\\n    <div>\\n      <input onInput={e => setText(e.target.value)} />\\n      <button type=\\\"button\\\" onClick={() => setValue(text)}>\\n        confirm\\n      </button>\\n      <Child value={value} />\\n    </div>\\n  )\\n}'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      useState,\n      useRef,\n      usePreviousProps,\n      Child,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  {() => {\n        const [text, setText] = useState('');\n        const [value, setValue] = useState('');\n        return <div>\n          <input onInput={e => setText(e.target.value)} />\n          <button type='button' onClick={() => setValue(text)}>confirm</button>\n          <Child value={value} mdxType=\"Child\" />\n        </div>;\n      }}\n    </Playground>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}