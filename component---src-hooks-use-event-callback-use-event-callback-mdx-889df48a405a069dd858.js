(window.webpackJsonp=window.webpackJsonp||[]).push([[9],{Z1tt:function(e,n,t){"use strict";t.r(n),t.d(n,"_frontmatter",(function(){return r})),t.d(n,"default",(function(){return d}));var a=t("Fcif"),l=t("+I+c"),c=t("mXGw"),o=t("/FXl"),u=t("TjRS"),b=t("ZFoC"),i=t("8IkL"),s=t("lSPG"),r=(t("aD51"),{});void 0!==r&&r&&r===Object(r)&&Object.isExtensible(r)&&!r.hasOwnProperty("__filemeta")&&Object.defineProperty(r,"__filemeta",{configurable:!0,value:{name:"_frontmatter",filename:"src/hooks/useEventCallback/useEventCallback.mdx"}});var k={_frontmatter:r},v=u.a;function d(e){var n,t=e.components,d=Object(l.a)(e,["components"]);return Object(o.b)(v,Object(a.a)({},k,d,{components:t,mdxType:"MDXLayout"}),Object(o.b)("h1",{id:"useeventcallback"},"useEventCallback"),Object(o.b)("h2",{id:"basic-usage"},"Basic usage"),Object(o.b)("p",null,"  与useCallback这样的hook不同， 即使依赖发生变化，也不会导致函数的引用地址发生变化。\n在子组件的hander属性被useEventCallback处理后的场景下，可以显著减少子组件的重渲染次数。"),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-js"}),"import { useEventCallback } from 'vc-ui'\n\nconst Button = ({ onClick, children }) => {\n  console.log('render Button: ', children)\n  return (\n    <button onClick={onClick}>{children}</button>\n  )\n}\n      \n")),Object(o.b)(b.c,{__position:0,__code:"() => {\n  const [value, setValue] = useState('')\n  const handleClick1 = React.useCallback(() => {\n    console.log('click useCallback', value)\n  }, [value])\n  const handleClick2 = useEventCallback(() => {\n    console.log('click useEventCallback', value)\n  }, [value])\n  return (\n    <div>\n      <input value={value} onChange={e => setValue(e.target.value)}></input>\n      <div>\n        <Button onClick={handleClick1}>click useCallback</Button>\n        <br />\n        <Button onClick={handleClick2}>click useEventCallback</Button>\n      </div>\n    </div>\n  )\n}",__scope:(n={props:d,DefaultLayout:u.a,Playground:b.c,Props:b.d,useState:c.useState,useRef:c.useRef,useEventCallback:i.a,Button:s.a},n.DefaultLayout=u.a,n._frontmatter=r,n),mdxType:"Playground"},(function(){var e=Object(c.useState)(""),n=e[0],t=e[1],a=c.useCallback((function(){console.log("click useCallback",n)}),[n]),l=Object(i.a)((function(){console.log("click useEventCallback",n)}),[n]);return Object(o.b)("div",null,Object(o.b)("input",{value:n,onChange:function(e){return t(e.target.value)}}),Object(o.b)("div",null,Object(o.b)(s.a,{onClick:a,mdxType:"Button"},"click useCallback"),Object(o.b)("br",null),Object(o.b)(s.a,{onClick:l,mdxType:"Button"},"click useEventCallback")))})))}void 0!==d&&d&&d===Object(d)&&Object.isExtensible(d)&&!d.hasOwnProperty("__filemeta")&&Object.defineProperty(d,"__filemeta",{configurable:!0,value:{name:"MDXContent",filename:"src/hooks/useEventCallback/useEventCallback.mdx"}}),d.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-hooks-use-event-callback-use-event-callback-mdx-889df48a405a069dd858.js.map