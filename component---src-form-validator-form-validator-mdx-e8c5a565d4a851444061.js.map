{"version":3,"sources":["webpack:///../src/FormValidator/FormValidator.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","of","FormValidator","__position","__code","__scope","Playground","Props","TextField","meta","type","label","key","required","rules","text","validate","value","undefined","includes","RegExp","test","React","setValue","extra","data","onValidate","error","name","showError","helperText","onChange","e","target","isMDXComponent"],"mappings":"2RAWaA,G,UAAe,S,qNAC5B,IAAMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,MAFDC,EAEC,EAFDA,WACGC,EACF,8BACD,OAAO,YAACJ,EAAD,eAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAI5E,iBAAQ,CACN,GAAM,iBADR,iBAGA,iBAAQ,CACN,GAAM,SADR,SAGA,YAAC,IAAD,CAAOC,GAAIC,IAAeF,QAAQ,UAClC,iBAAQ,CACN,GAAM,eADR,eAGA,YAAC,IAAD,CAAYG,WAAY,EAAGC,OAAQ,kjCAAmkCC,SAAO,GAC3mCN,QACAH,kBACAU,eACAC,UACAL,kBACAM,eAN2mC,gBAO3mCZ,IAP2mC,EAQ3mCH,eAR2mC,GAS1mCO,QAAQ,eACZ,WACK,IAAMS,EAAO,CACXC,KAAM,OACNC,MAAO,KACPC,IAAK,WACLC,UAAU,EACVC,MAAO,CAAC,CACNC,KAAM,SACNC,SAAU,SAAAC,GAAK,MAAI,CAAC,QAAIC,EAAW,MAAMC,SAASF,KACjD,CACDF,KAAM,0BACNC,SAAU,SAAAC,GAAK,OAAK,IAAIG,OAAO,mCAAmCC,KAAKJ,OAX1E,EAcyBK,WAAe,IAAlCL,EAdN,KAcaM,EAdb,KAeD,OAAO,YAAC,IAAD,CAAeT,MAAOL,EAAKK,MAAOG,MAAOA,EAAOO,MAAO,CAC5DC,KAAMR,GACLjB,QAAQ,kBACR,SAAC0B,EAAYC,GACZ,YAD2B,IAAfA,MAAQ,IACb,YAAC,IAAD,CAAWjB,KAAMD,EAAKC,KAAMC,MAAOF,EAAKE,MAAOiB,KAAMnB,EAAKG,IAAKK,MAAOA,EAAOJ,SAAUJ,EAAKI,SAAUc,MAAOA,EAAME,UAAWC,WAAYH,EAAMG,WAAYC,SAAU,SAAAC,GACrJ,mBAAfN,GAA6BA,IACpCH,EAASS,EAAEC,OAAOhB,QACjBjB,QAAQ,0B,mNASvBH,EAAWqC,gBAAiB","file":"component---src-form-validator-form-validator-mdx-e8c5a565d4a851444061.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/travis/build/HarryChen0506/vc-ui/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport { Playground, Props } from 'docz';\nimport FormValidator from './';\nimport TextField from '../TextField';\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h1 {...{\n      \"id\": \"formvalidator\"\n    }}>{`FormValidator`}</h1>\n    <h2 {...{\n      \"id\": \"props\"\n    }}>{`Props`}</h2>\n    <Props of={FormValidator} mdxType=\"Props\" />\n    <h2 {...{\n      \"id\": \"basic-usage\"\n    }}>{`Basic usage`}</h2>\n    <Playground __position={1} __code={'() => {\\n  const meta = {\\n    type: \\'text\\',\\n    label: \\'密码\\',\\n    key: \\'password\\',\\n    required: true,\\n    rules: [\\n      {\\n        text: \\'密码不能为空\\',\\n        validate: value => [\\'\\', undefined, null].includes(value),\\n      },\\n      {\\n        text: \\'密码长度不低于8位，需同时包含数字与英文字母！\\',\\n        validate: value =>\\n          !new RegExp(/^(?=.*[a-zA-Z])(?=.*\\\\d)[^]{8,}$/).test(value),\\n      },\\n    ],\\n  }\\n  const [value, setValue] = React.useState(\\'\\')\\n  return (\\n    <FormValidator rules={meta.rules} value={value} extra={{ data: value }}>\\n      {(onValidate, error = {}) => {\\n        return (\\n          <TextField\\n            type={meta.type}\\n            label={meta.label}\\n            name={meta.key}\\n            value={value}\\n            required={meta.required}\\n            error={error.showError}\\n            helperText={error.helperText}\\n            onChange={e => {\\n              typeof onValidate === \\'function\\' && onValidate()\\n              setValue(e.target.value)\\n            }}\\n          />\\n        )\\n      }}\\n    </FormValidator>\\n  )\\n}'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      FormValidator,\n      TextField,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  {() => {\n        const meta = {\n          type: 'text',\n          label: '密码',\n          key: 'password',\n          required: true,\n          rules: [{\n            text: '密码不能为空',\n            validate: value => ['', undefined, null].includes(value)\n          }, {\n            text: '密码长度不低于8位，需同时包含数字与英文字母！',\n            validate: value => !new RegExp(/^(?=.*[a-zA-Z])(?=.*\\d)[^]{8,}$/).test(value)\n          }]\n        };\n        const [value, setValue] = React.useState('');\n        return <FormValidator rules={meta.rules} value={value} extra={{\n          data: value\n        }} mdxType=\"FormValidator\">\n          {(onValidate, error = {}) => {\n            return <TextField type={meta.type} label={meta.label} name={meta.key} value={value} required={meta.required} error={error.showError} helperText={error.helperText} onChange={e => {\n              typeof onValidate === 'function' && onValidate();\n              setValue(e.target.value);\n            }} mdxType=\"TextField\" />;\n          }}\n        </FormValidator>;\n      }}\n    </Playground>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}