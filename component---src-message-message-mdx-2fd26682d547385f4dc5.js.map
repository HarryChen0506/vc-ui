{"version":3,"sources":["webpack:///../src/message/Message.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","of","MessagePropTypes","OpenOptionsTypes","__position","__code","__scope","Playground","Props","createMuiTheme","ThemeProvider","Button","Select","message","setTheme","theme","palette","primary","main","contrastText","light","variant","onClick","open","isSingleton","type","noticeIconName","content","style","left","bottom","transform","expandActions","text","iconName","console","log","duration","right","destroy","isMDXComponent"],"mappings":"sWAgBaA,G,UAAe,S,yMAC5B,IAAMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,MAFDC,EAEC,EAFDA,WACGC,EACF,8BACD,OAAO,YAACJ,EAAD,eAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAI5E,iBAAQ,CACN,GAAM,WADR,WAGA,iBAAQ,CACN,GAAM,SADR,SAGA,YAAC,IAAD,CAAOC,GAAIC,IAAkBF,QAAQ,UACrC,iBAAQ,CACN,GAAM,gBADR,gBAGA,YAAC,IAAD,CAAOC,GAAIE,IAAkBH,QAAQ,UACrC,iBAAQ,CACN,GAAM,eADR,eAGA,YAAC,IAAD,CAAYI,WAAY,EAAGC,OAAQ,gqDAA2sDC,SAAO,GACnvDP,QACAH,kBACAW,eACAC,UACAC,mBACAC,kBACAC,WACAC,WACAC,YACAX,qBACAC,qBACAW,cAZmvD,gBAanvDlB,IAbmvD,EAcnvDH,eAdmvD,GAelvDO,QAAQ,eACZ,WACK,IAAMe,EAAQN,YAAe,CAC3BO,QAAS,CACPC,QAAS,CACPC,KAAM,wBACNC,aAAc,OACdC,MAAO,cAIbN,YAASC,GAiDT,OAAO,YAAC,IAAD,CAAeA,MAAOA,EAAOf,QAAQ,iBAC1C,uBACE,YAAC,IAAD,CAAQqB,QAAQ,YAAYC,QAjDhB,WACdT,IAAQU,KAAK,CACXC,aAAa,EACbC,KAAM,UACNC,eAAgB,eAChBC,QAAS,QACTC,MAAO,CACLC,KAAM,MACNC,OAAQ,OACRC,UAAW,oBAEbC,cAAe,CAAC,CACdC,KAAM,OACNC,SAAU,eACVZ,QAAS,kBAAMa,QAAQC,IAAI,iBAE7BC,SAAU,MAiCoCrC,QAAQ,UAAtD,aACA,uBAAM,uBACN,YAAC,IAAD,CAAQqB,QAAQ,YAAYC,QA/Bf,WACfT,IAAQU,KAAK,CACXE,KAAM,UACNC,eAAgB,eAChBC,QAAS,UACTC,MAAO,CACLC,KAAM,MACNC,OAAQ,OACRC,UAAW,uBAuBkC/B,QAAQ,UAAvD,cACA,uBAAM,uBACN,YAAC,IAAD,CAAQqB,QAAQ,YAAYC,QApBf,WACfT,IAAQU,KAAK,CACXI,QAAS,UACTC,MAAO,CACLU,MAAO,OACPR,OAAQ,WAeqC9B,QAAQ,UAAvD,cACA,uBAAM,uBACN,YAAC,IAAD,CAAQqB,QAAQ,YAAYC,QAZT,WACrBT,IAAQ0B,WAW+CvC,QAAQ,UAA7D,wB,uMASZH,EAAW2C,gBAAiB","file":"component---src-message-message-mdx-2fd26682d547385f4dc5.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/travis/build/HarryChen0506/vc-ui/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport { Playground, Props } from 'docz';\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\nimport Button from '../Button';\nimport Select from '../Select';\nimport message from './';\nimport MessagePropTypes from './MessagePropTypes';\nimport OpenOptionsTypes from './OpenOptionsTypes';\nimport { setTheme } from '../theme';\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h1 {...{\n      \"id\": \"message\"\n    }}>{`message`}</h1>\n    <h2 {...{\n      \"id\": \"props\"\n    }}>{`Props`}</h2>\n    <Props of={MessagePropTypes} mdxType=\"Props\" />\n    <h2 {...{\n      \"id\": \"open-options\"\n    }}>{`open options`}</h2>\n    <Props of={OpenOptionsTypes} mdxType=\"Props\" />\n    <h2 {...{\n      \"id\": \"basic-usage\"\n    }}>{`Basic usage`}</h2>\n    <Playground __position={2} __code={'() => {\\n  const theme = createMuiTheme({\\n    palette: {\\n      primary: {\\n        main: \\'rgba(35, 178, 190, 1)\\',\\n        contrastText: \\'#fff\\',\\n        light: \\'#18FFFF\\',\\n      },\\n    },\\n  })\\n  setTheme(theme)\\n  const showMsg = () => {\\n    message.open({\\n      isSingleton: false,\\n      type: \\'primary\\',\\n      noticeIconName: \\'notification\\',\\n      content: \\'转诊成功！\\',\\n      style: { left: \\'50%\\', bottom: \\'20px\\', transform: \\'translateX(-50%)\\' },\\n      expandActions: [\\n        {\\n          text: \\'查看患者\\',\\n          iconName: \\'notification\\',\\n          onClick: () => console.log(\\'successful\\'),\\n        },\\n      ],\\n      duration: 30,\\n    })\\n  }\\n  const showMsg2 = () => {\\n    message.open({\\n      type: \\'warning\\',\\n      noticeIconName: \\'notification\\',\\n      content: \\'密码设置成功！\\',\\n      style: { left: \\'50%\\', bottom: \\'20px\\', transform: \\'translateX(-50%)\\' },\\n    })\\n  }\\n  const showMsg3 = () => {\\n    message.open({\\n      content: \\'密码设置成功！\\',\\n      style: { right: \\'50px\\', bottom: \\'20px\\' },\\n    })\\n  }\\n  const destroyMessage = () => {\\n    message.destroy()\\n  }\\n  return (\\n    <ThemeProvider theme={theme}>\\n      <div>\\n        <Button variant=\\\"contained\\\" onClick={showMsg}>\\n          显示Message\\n        </Button>\\n        <br />\\n        <br />\\n        <Button variant=\\\"contained\\\" onClick={showMsg2}>\\n          显示Message2\\n        </Button>\\n        <br />\\n        <br />\\n        <Button variant=\\\"contained\\\" onClick={showMsg3}>\\n          显示Message3\\n        </Button>\\n        <br />\\n        <br />\\n        <Button variant=\\\"contained\\\" onClick={destroyMessage}>\\n          销毁message\\n        </Button>\\n      </div>\\n    </ThemeProvider>\\n  )\\n}'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      createMuiTheme,\n      ThemeProvider,\n      Button,\n      Select,\n      message,\n      MessagePropTypes,\n      OpenOptionsTypes,\n      setTheme,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  {() => {\n        const theme = createMuiTheme({\n          palette: {\n            primary: {\n              main: 'rgba(35, 178, 190, 1)',\n              contrastText: '#fff',\n              light: '#18FFFF'\n            }\n          }\n        });\n        setTheme(theme);\n\n        const showMsg = () => {\n          message.open({\n            isSingleton: false,\n            type: 'primary',\n            noticeIconName: 'notification',\n            content: '转诊成功！',\n            style: {\n              left: '50%',\n              bottom: '20px',\n              transform: 'translateX(-50%)'\n            },\n            expandActions: [{\n              text: '查看患者',\n              iconName: 'notification',\n              onClick: () => console.log('successful')\n            }],\n            duration: 30\n          });\n        };\n\n        const showMsg2 = () => {\n          message.open({\n            type: 'warning',\n            noticeIconName: 'notification',\n            content: '密码设置成功！',\n            style: {\n              left: '50%',\n              bottom: '20px',\n              transform: 'translateX(-50%)'\n            }\n          });\n        };\n\n        const showMsg3 = () => {\n          message.open({\n            content: '密码设置成功！',\n            style: {\n              right: '50px',\n              bottom: '20px'\n            }\n          });\n        };\n\n        const destroyMessage = () => {\n          message.destroy();\n        };\n\n        return <ThemeProvider theme={theme} mdxType=\"ThemeProvider\">\n          <div>\n            <Button variant=\"contained\" onClick={showMsg} mdxType=\"Button\">显示Message</Button>\n            <br /><br />\n            <Button variant=\"contained\" onClick={showMsg2} mdxType=\"Button\">显示Message2</Button>\n            <br /><br />\n            <Button variant=\"contained\" onClick={showMsg3} mdxType=\"Button\">显示Message3</Button>\n            <br /><br />\n            <Button variant=\"contained\" onClick={destroyMessage} mdxType=\"Button\">销毁message</Button>\n          </div>\n        </ThemeProvider>;\n      }}\n    </Playground>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}