(window.webpackJsonp=window.webpackJsonp||[]).push([[19],{j4bF:function(n,e,t){"use strict";t.r(e),t.d(e,"_frontmatter",(function(){return b})),t.d(e,"default",(function(){return h}));var o=t("mK0O"),s=t("Fcif"),a=t("+I+c"),r=t("mXGw"),u=t("/FXl"),c=t("TjRS"),i=t("ZFoC"),l=t("MMP0"),d=t("ZnbT");t("aD51");function f(n,e){var t=Object.keys(n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(n);e&&(o=o.filter((function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable}))),t.push.apply(t,o)}return t}function g(n){for(var e=1;e<arguments.length;e++){var t=null!=arguments[e]?arguments[e]:{};e%2?f(Object(t),!0).forEach((function(e){Object(o.a)(n,e,t[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(t)):f(Object(t)).forEach((function(e){Object.defineProperty(n,e,Object.getOwnPropertyDescriptor(t,e))}))}return n}var b={};void 0!==b&&b&&b===Object(b)&&Object.isExtensible(b)&&!b.hasOwnProperty("__filemeta")&&Object.defineProperty(b,"__filemeta",{configurable:!0,value:{name:"_frontmatter",filename:"src/voxios/voxios.mdx"}});var p={_frontmatter:b},m=c.a;function h(n){var e,t,o,f=n.components,h=Object(a.a)(n,["components"]);return Object(u.b)(m,Object(s.a)({},p,h,{components:f,mdxType:"MDXLayout"}),Object(u.b)("h1",{id:"voxios"},"voxios"),Object(u.b)("h2",{id:"basic-usage"},"Basic usage"),Object(u.b)("p",null,"  基于axios封装的一个http请求库。"),Object(u.b)("p",null,"  使用默认配置可以开箱即用，同时支持自定义配置，能满足不同平台的特异性需求。"),Object(u.b)("h3",{id:"创建请求实例"},"创建请求实例"),Object(u.b)("h4",{id:"请求实例创建"},"请求实例创建"),Object(u.b)("pre",null,Object(u.b)("code",Object(s.a)({parentName:"pre"},{className:"language-js"}),"import { Voxios, voxiosDefaultConfig as defaultConfig} from 'voxelcloud-ui'\n\n// 方式一 全局注册配置\nVoxios.registerConfig('default', defaultConfig)\nconst defaultVoxios = new Voxios().useConfig('default')\nconst defaultRequest = defaultVoxios.getInstance()\n\n// 方式二 类实例注册配置\nconst defaultRequest = new Voxios().registerConfig('default', defaultConfig).useConfig('default').getInstance()\n\n// 方式三 注册自定义配置\nconst customConfig = { onSuccess: () => { } }\nconst customRequest = new Voxios().registerConfig('custom', customConfig).useConfig('custom').getInstance()\n\n// 方式四 直接使用自定义配置\nconst customConfig = { onSuccess: () => { } }\nconst customRequest = new Voxios().setConfig(customConfig).getInstance()\n\n// 方式五 添加和调用自定义模块，例如: 注册和调用logout服务\nconst customRequest = new Voxios()\n    .addModule('logout', () => {\n      console.log('--- logout ---')\n    })\n    .updateConfig((config) => {\n      const onSuccess = (res, context) => {\n        // ...\n        const logout = context.getModule('logout')\n        typeof logout === 'function' && logout()\n        // ...\n      };\n      return { ...config, onSuccess };\n    }).getInstance();\n      \n")),Object(u.b)("h4",{id:"请求实例配置"},"请求实例配置"),Object(u.b)("p",null,"可在这里插入自定义钩子函数，以及配置信息，内部项目均为可选"),Object(u.b)("pre",null,Object(u.b)("code",Object(s.a)({parentName:"pre"},{className:"language-js"}),"const config = { \n    // 是否抛出报错信息\n    throwErrorMessage: false, \n\n    // 添加鉴权请求头\n    addAuthHeader: () => {}, \n\n    // headers转换器\n    transformHeaders: () => {},\n\n    // axios请求执行前执行的钩子函数\n    onBeforeRequest: (context) => { }, // context为Voxios实例\n\n    // 请求成功后执行的钩子函数\n    onSuccess: (res, context) => {}, // context为Voxios实例\n\n    // 请求失败后进入的钩子函数\n    onError: (error, context) => {}, // context为Voxios实例\n\n    // axios自身支持的配置参数\n    axiosConfig: {}, \n}\n\nconst request = new Voxios().setConfig(config).getInstance()\n")),Object(u.b)("h3",{id:"请求调用"},"请求调用"),Object(u.b)("pre",null,Object(u.b)("code",Object(s.a)({parentName:"pre"},{className:"language-js"}),"\nimport { Voxios, voxiosDefaultConfig as defaultConfig} from 'voxelcloud-ui'\n\n// 创建请求实例\nconst request = new Voxios().setConfig(defaultConfig).getInstance()\n\n// 配置请求参数\nconst options = { \n    url: 'https://yapi.voxelcloud.net.cn/mock/:id/api/auth/users',\n    method: 'get',\n    params: { id: 66 },\n    data: { name: [1, 2, 3] },\n    config: {\n      throwErrorMessage: true,\n    },\n    axiosConfig: {\n      timeout: 100,\n    }\n}\n\n// 调用请求\nrequest(options).then((res) => {\n  console.log(res)\n}).catch((err) => {\n  console.log(err)\n})\n\n")),Object(u.b)("h3",{id:"请求参数配置"},"请求参数配置"),Object(u.b)("p",null,"下面是创建请求时可以用的配置选项。只有 url 是必需的。如果没有指定 method，请求将默认使用 get 方法。"),Object(u.b)("p",null,"详细配置可以参考: ",Object(u.b)("a",Object(s.a)({parentName:"p"},{href:"http://www.axios-js.com/zh-cn/docs/index.html#%E8%AF%B7%E6%B1%82%E9%85%8D%E7%BD%AE"}),"axios")),Object(u.b)("pre",null,Object(u.b)("code",Object(s.a)({parentName:"pre"},{className:"language-js"}),"  {\n    // `url` 是用于请求的服务器 URL \n    url: '/user/:id', // 必填\n\n    // `method` 是创建请求时使用的方法\n    method: 'get', // 可选, 默认 `get`\n\n    // `params` 用来替换url中path部分的占位符，如`/user/:id` -> `/user/66`\n    params: { id: 66 }, // 可选\n\n    //  `data` 是请求发送的数据\n    // 当请求方法'PUT', 'POST', 和 'PATCH'时，作为请求主体被发送的数据\n    // 当请求方法'GET'时, 作为 URL 参数发送\n    data: { name: [1, 2, 3] }, // 可选\n\n    //  `config` 同Voxios实例的配置项，此处配置可覆盖实例的配置\n    config: {\n      throwErrorMessage: false,\n      // ...\n    }\n\n    // `axiosConfig` axios支持的配置参数, 此处配置可前面所有地方的配置\n    axiosConfig: { \n       timeout: 100, // 指定请求超时的毫秒数(0 表示无超时时间)\n       // ...\n    }\n  }\n")),Object(u.b)("h5",{id:"案例1---默认配置"},"案例1 - 默认配置"),Object(u.b)(i.c,{__position:0,__code:"() => {\n  const url =\n    'https://yapi.voxelcloud.net.cn/mock/:id/api/platform/announcements'\n  const [result, setResult] = useState('')\n  const defaultRequest = defaultVoxios.getInstance()\n  const handleClick = () => {\n    const options = {\n      url,\n      params: { id: 66 },\n      config: { throwErrorMessage: true },\n    }\n    defaultRequest(options)\n      .then(res => {\n        setResult(res.data)\n      })\n      .catch(({ code, message, data } = {}) => {\n        setResult({ code, message, data })\n      })\n  }\n  return (\n    <div>\n      <pre>result: {JSON.stringify(result, null, 2)}</pre>\n      <button onClick={handleClick}>默认配置</button>\n      <br />\n    </div>\n  )\n}",__scope:(e={props:h,DefaultLayout:c.a,Playground:i.c,Props:i.d,useState:r.useState,Voxios:l.a,defaultConfig:l.b,defaultVoxios:d.a},e.DefaultLayout=c.a,e._frontmatter=b,e),mdxType:"Playground"},(function(){var n=Object(r.useState)(""),e=n[0],t=n[1],o=d.a.getInstance();return Object(u.b)("div",null,Object(u.b)("pre",null,"result: ",JSON.stringify(e,null,2)),Object(u.b)("button",{onClick:function(){o({url:"https://yapi.voxelcloud.net.cn/mock/:id/api/platform/announcements",params:{id:66},config:{throwErrorMessage:!0}}).then((function(n){t(n.data)})).catch((function(n){var e=void 0===n?{}:n,o=e.code,s=e.message,a=e.data;t({code:o,message:s,data:a})}))}},"默认配置"),Object(u.b)("br",null))})),Object(u.b)("h5",{id:"案例2---更改默认配置"},"案例2 - 更改默认配置"),Object(u.b)(i.c,{__position:1,__code:"() => {\n  const url = 'https://yapi.voxelcloud.net.cn/mock/:id/api/auth/users'\n  const [result, setResult] = useState('')\n  const defaultVoxios = new Voxios()\n    .registerConfig('default', defaultConfig)\n    .useConfig('default')\n  const updatedRequest = defaultVoxios\n    .updateConfig(config => {\n      const onSuccess = res => {\n        res.data = 'hello, world!'\n        return res\n      }\n      return { ...config, onSuccess }\n    })\n    .getInstance()\n  const handleClick = () => {\n    const options = { url, params: { id: 66 } }\n    updatedRequest(options)\n      .then(res => {\n        setResult(res.data)\n      })\n      .catch(err => {\n        setResult(err)\n      })\n  }\n  return (\n    <div>\n      <pre>result: {JSON.stringify(result, null, 2)}</pre>\n      <button onClick={handleClick}>更改默认配置</button>\n      <br />\n    </div>\n  )\n}",__scope:(t={props:h,DefaultLayout:c.a,Playground:i.c,Props:i.d,useState:r.useState,Voxios:l.a,defaultConfig:l.b,defaultVoxios:d.a},t.DefaultLayout=c.a,t._frontmatter=b,t),mdxType:"Playground"},(function(){var n=Object(r.useState)(""),e=n[0],t=n[1],o=(new l.a).registerConfig("default",l.b).useConfig("default").updateConfig((function(n){return g(g({},n),{},{onSuccess:function(n){return n.data="hello, world!",n}})})).getInstance();return Object(u.b)("div",null,Object(u.b)("pre",null,"result: ",JSON.stringify(e,null,2)),Object(u.b)("button",{onClick:function(){o({url:"https://yapi.voxelcloud.net.cn/mock/:id/api/auth/users",params:{id:66}}).then((function(n){t(n.data)})).catch((function(n){t(n)}))}},"更改默认配置"),Object(u.b)("br",null))})),Object(u.b)("h5",{id:"案例3---自定义配置"},"案例3 - 自定义配置"),Object(u.b)(i.c,{__position:2,__code:"() => {\n  const url = 'https://yapi.voxelcloud.net.cn/mock/:id/api/auth/users'\n  const [result, setResult] = useState('')\n  const customRequest = new Voxios()\n    .setConfig({\n      addAuthHeader: () => ({ token: 'hello' }),\n    })\n    .addModule('logout', () => {\n      console.log('--- logout ---')\n    })\n    .updateConfig(config => {\n      const onSuccess = (res, context) => {\n        res.data = 'custom voxios request'\n        if (Math.random() > 0.5) {\n          const logout = context.getModule('logout')\n          typeof logout === 'function' && logout()\n        } else {\n          console.log('should not to logout')\n        }\n        return res\n      }\n      return { ...config, onSuccess }\n    })\n    .getInstance()\n  const handleClick = () => {\n    const options = {\n      url,\n      params: { id: 66 },\n      data: { name: [1, 2, 3] },\n      config: {\n        transformHeaders: headers => ({ ...headers, 'other-token': 12345 }),\n        throwErrorMessage: true,\n      },\n      axiosConfig: {\n        timeout: 100,\n        auth: {\n          username: 'janedoe',\n          password: 's00pers3cret',\n        },\n      },\n    }\n    customRequest(options)\n      .then(res => {\n        setResult(res.data)\n      })\n      .catch(err => {\n        setResult(err)\n      })\n  }\n  return (\n    <div>\n      <pre>result: {JSON.stringify(result, null, 2)}</pre>\n      <button onClick={handleClick}>自定义配置</button>\n      <br />\n    </div>\n  )\n}",__scope:(o={props:h,DefaultLayout:c.a,Playground:i.c,Props:i.d,useState:r.useState,Voxios:l.a,defaultConfig:l.b,defaultVoxios:d.a},o.DefaultLayout=c.a,o._frontmatter=b,o),mdxType:"Playground"},(function(){var n=Object(r.useState)(""),e=n[0],t=n[1],o=(new l.a).setConfig({addAuthHeader:function(){return{token:"hello"}}}).addModule("logout",(function(){console.log("--- logout ---")})).updateConfig((function(n){return g(g({},n),{},{onSuccess:function(n,e){if(n.data="custom voxios request",Math.random()>.5){var t=e.getModule("logout");"function"==typeof t&&t()}else console.log("should not to logout");return n}})})).getInstance();return Object(u.b)("div",null,Object(u.b)("pre",null,"result: ",JSON.stringify(e,null,2)),Object(u.b)("button",{onClick:function(){o({url:"https://yapi.voxelcloud.net.cn/mock/:id/api/auth/users",params:{id:66},data:{name:[1,2,3]},config:{transformHeaders:function(n){return g(g({},n),{},{"other-token":12345})},throwErrorMessage:!0},axiosConfig:{timeout:100,auth:{username:"janedoe",password:"s00pers3cret"}}}).then((function(n){t(n.data)})).catch((function(n){t(n)}))}},"自定义配置"),Object(u.b)("br",null))})))}void 0!==h&&h&&h===Object(h)&&Object.isExtensible(h)&&!h.hasOwnProperty("__filemeta")&&Object.defineProperty(h,"__filemeta",{configurable:!0,value:{name:"MDXContent",filename:"src/voxios/voxios.mdx"}}),h.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-voxios-voxios-mdx-8ade0f50483351257fec.js.map