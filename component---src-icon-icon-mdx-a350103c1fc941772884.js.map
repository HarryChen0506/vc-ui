{"version":3,"sources":["webpack:///../src/Icon/Icon.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","of","Icon","parentName","__position","__code","__scope","Playground","Props","iconMap","className","color","Object","keys","map","icon","i","key","name","style","display","width","isMDXComponent"],"mappings":"uSAYaA,G,UAAe,S,mMAC5B,IAAMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,MAFDC,EAEC,EAFDA,WACGC,EACF,8BACD,OAAO,YAACJ,EAAD,eAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAI5E,iBAAQ,CACN,GAAM,QADR,QAGA,iBAAQ,CACN,GAAM,SADR,SAGA,YAAC,IAAD,CAAOC,GAAIC,IAAMF,QAAQ,UACzB,iBAAQ,CACN,GAAM,cADR,cAGA,qBAAG,6BAAGG,WAAW,KAAQ,CACrB,KAAQ,yCADT,gBAGH,iBAAQ,CACN,GAAM,kBADR,kBAGA,uBAAK,gCAAMA,WAAW,OAAU,IAA3B,6aAmBL,iBAAQ,CACN,GAAM,eADR,eAGA,YAAC,IAAD,CAAYC,WAAY,EAAGC,OAAQ,4iBAAmjBC,SAAO,GAC3lBP,QACAH,kBACAW,eACAC,UACAN,SACAO,aAN2lB,gBAO3lBb,IAP2lB,EAQ3lBH,eAR2lB,GAS1lBO,QAAQ,eACZ,kBAAM,uBACD,YAAC,IAAD,CAAMU,UAAU,4BAA4BV,QAAQ,SACpD,YAAC,IAAD,CAAMW,MAAM,UAAUD,UAAU,4BAA4BV,QAAQ,SACpE,uBACAY,OAAOC,KAAKJ,KAASK,KAAI,SAACC,EAAMC,GAC9B,OAAKA,EAAI,GAAK,GAAM,EACX,4BACFD,EADE,KACK,YAAC,IAAD,CAAME,IAAKF,EAAMG,KAAMH,EAAMf,QAAQ,SAC7C,wBAIC,oBAAMmB,MAAO,CAClBC,QAAS,eACTC,MAAO,UACLN,EAHG,KAGI,YAAC,IAAD,CAAME,IAAKF,EAAMG,KAAMH,EAAMf,QAAQ,uB,iMAQ1DH,EAAWyB,gBAAiB","file":"component---src-icon-icon-mdx-a350103c1fc941772884.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/travis/build/HarryChen0506/vc-ui/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport { Playground, Props } from 'docz';\nimport Icon from './';\nimport '../assets/fonts/iconfont.css';\nimport iconMap from './iconMap';\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h1 {...{\n      \"id\": \"icon\"\n    }}>{`Icon`}</h1>\n    <h2 {...{\n      \"id\": \"props\"\n    }}>{`Props`}</h2>\n    <Props of={Icon} mdxType=\"Props\" />\n    <h2 {...{\n      \"id\": \"more-props\"\n    }}>{`More Props`}</h2>\n    <p><a parentName=\"p\" {...{\n        \"href\": \"https://material-ui.com/zh/api/icon/\"\n      }}>{`see details`}</a></p>\n    <h2 {...{\n      \"id\": \"iconmap-config\"\n    }}>{`iconMap config`}</h2>\n    <pre><code parentName=\"pre\" {...{}}>{`const prefix = 'iconfont';\nconst createTheme = () => createMuiTheme({\n  iconMap: {\n    arrowBack: \\`\\${prefix} iconarrow_back-24px3\\`,\n    arrowDown: \\`\\${prefix} iconic_arrow_drop_down_\\`,\n    swap: \\`\\${prefix} iconswap-24px\\`,\n  },\n});\n\nfunction Theme(props) {\n  const { children } = props;\n  const theme = createTheme();\n  return (\n    <ThemeProvider theme={theme}>\n      {children}\n    </ThemeProvider>\n  );\n}\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"basic-usage\"\n    }}>{`Basic usage`}</h2>\n    <Playground __position={1} __code={'() => (\\n  <div>\\n    <Icon className=\\\"iconfont iconic_search_px\\\" />\\n    <Icon color=\\\"primary\\\" className=\\\"iconfont iconic_search_px\\\" />\\n    <br />\\n    {Object.keys(iconMap).map((icon, i) => {\\n      if ((i + 1) % 6 === 0) {\\n        return (\\n          <>\\n            {icon}: <Icon key={icon} name={icon} />\\n            <br />\\n          </>\\n        )\\n      }\\n      return (\\n        <span style={{ display: \\'inline-block\\', width: \\'200px\\' }}>\\n          {icon}: <Icon key={icon} name={icon} />\\n        </span>\\n      )\\n    })}\\n  </div>\\n)'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      Icon,\n      iconMap,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  {() => <div>\n        <Icon className=\"iconfont iconic_search_px\" mdxType=\"Icon\" />\n        <Icon color=\"primary\" className=\"iconfont iconic_search_px\" mdxType=\"Icon\" />\n        <br />\n       {Object.keys(iconMap).map((icon, i) => {\n          if ((i + 1) % 6 === 0) {\n            return <>\n                {icon}: <Icon key={icon} name={icon} mdxType=\"Icon\" />\n                <br />\n               </>;\n          }\n\n          return <span style={{\n            display: 'inline-block',\n            width: '200px'\n          }}>{icon}: <Icon key={icon} name={icon} mdxType=\"Icon\" /></span>;\n        })}\n      </div>}\n    </Playground>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}